name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (with secrets)
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: recipe-search:latest
          secrets: |
            jwt=${{ secrets.JWT_SECRET }}
            dburl=${{ secrets.DATABASE_URL }}
            rapidapi_key_2=${{ secrets.RAPIDAPI_KEY_2 }}

      - name: Run tests inside container
        run: |
          docker run --rm \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e RAPIDAPI_KEY_2=${{ secrets.RAPIDAPI_KEY_2 }} \
            recipe-search:latest \
            npm test
            
      - name: Build assets inside container
        run: |
          docker run --rm \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e RAPIDAPI_KEY_2=${{ secrets.RAPIDAPI_KEY_2 }} \
            recipe-search:latest \
            npm run build

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: vercel-build
          path: .vercel/output

  deploy:
    name: Deploy to Vercel
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: vercel-build
          path: .vercel/output

      - name: Deploy with Vercel CLI
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id:  ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          prebuilt: true
          prod: ${{ github.ref == 'refs/heads/main' }}
